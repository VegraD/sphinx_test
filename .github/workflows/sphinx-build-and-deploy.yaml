name: Deploy Sphinx documentation

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main
  workflow_dispatch:

permissions:
  contents: write

jobs:
  setup:
    runs-on: ubuntu-latest
    steps:
      # Step 1: Install Sphinx onto runner with pip
      - uses: actions/checkout@v2
      - uses: actions/setup-python@v2
        with:
          python-version: 3.7
      - run: pip install -U sphinx
      # Step 2: Check if certain needed Sphinx files exist, if not we create defaults
      - name: Sphinx exist and make
        if: ${{ hashFiles('docs/conf.py') == '' && hashFiles('docs/index.rst') == '' && hashFiles('docs/Makefile') == '' && hashFiles('docs/make.bat') == ''}}
        run: |
          git config --global user.email "action@github.com"
          git config --global user.name "GitHub Action"
          git config advice.addEmbeddedRepo false
          git clone --depth 1 https://github.com/vortexntnu/vortex-ci.git --branch sphinx/docs_template
          rm -rf vortex-ci/.git
          cp -r vortex-ci/docs docs
          cp vortex-ci/.nojekyll .nojekyll
          rm -rf vortex-ci
          git clone ${{ github.server_url }}/${{ github.repository }}.git --branch main --single-branch main
          rm -rf main
          git add .
          git commit -m "Update: Created template files for Sphinx" -a || true

      # Step 3: Push changes runner has made to repository
      - name: Push changes
        uses: ad-m/github-push-action@master
        with:
          branch: main
          github_token: ${{ secrets.GITHUB_TOKEN }}

      - name: directory content check
        run: |
          ls -la

      - name: Upload docs folder
        uses: actions/upload-artifact@v4
        with:
          name: docs
          path: docs

  build-deploy:
    runs-on: ubuntu-latest
    needs: setup
    steps:

      - name: Download docs folder
        uses: actions/download-artifact@v4
        with:
          name: docs
          path: docs

      - name: directory content check
        run: |
          ls -la

      # Step 4. Install dependencies and generate documentation
      - uses: actions/checkout@v4
      - uses: actions/setup-python@v5
      - name: Install dependencies
        run: |
          pip install sphinx sphinx_rtd_theme myst_parser
        
      - uses: actions/checkout@v1 
      - uses: ammaraskar/sphinx-action@master
        with:
            docs-folder: "docs/" 
    
      - uses: ammaraskar/sphinx-action@master
        with:
            build-command: "sphinx-build -b html . _build"
            docs-folder: "docs/"
      - name: Deploy to GitHub Pages
        uses: peaceiris/actions-gh-pages@v3
        if: ${{ github.event_name == 'push' && github.ref == 'refs/heads/main' }}
        with:
          publish_branch: gh-pages
          github_token: ${{ secrets.GITHUB_TOKEN }}
          publish_dir: _build/
          force_orphan: true

#      - name: List docs directory in setup
#        run: |
#          ls
#      - name: Download docs folder
#        uses: actions/download-artifact@v4
#        with:
#          name: docs-folder
#          path: docs
#
#      # Step 4. Install dependencies and generate documentation
#      - uses: actions/checkout@v4
#      - uses: actions/setup-python@v5
#      - name: Install dependencies
#        run: |
#          pip install sphinx sphinx_rtd_theme myst_parser
#      - name: Sphinx build
#        run: |
#          sphinx-build docs _build
#        
#      - name: Deploy to GitHub Pages
#        uses: peaceiris/actions-gh-pages@v3
#        if: ${{ github.event_name == 'push' && github.ref == 'refs/heads/main' }}
#        with:
#          publish_branch: gh-pages
#          github_token: ${{ secrets.GITHUB_TOKEN }}
#          publish_dir: _build/
#          #force_orphan: true


